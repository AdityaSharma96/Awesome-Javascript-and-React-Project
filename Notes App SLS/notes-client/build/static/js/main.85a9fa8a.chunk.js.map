{"version":3,"sources":["libs/contextLib.js","components/AuthenticatedRoute.js","components/UnauthenticatedRoute.js","libs/errorLib.js","containers/Home.js","components/LoaderButton.js","libs/hooksLib.js","containers/Login.js","containers/NotFound.js","containers/Signup.js","libs/awsLib.js","config.js","containers/NewNote.js","containers/Notes.js","components/BillingForm.js","containers/Settings.js","Routes.js","components/ErrorBoundary.js","App.js","serviceWorker.js","index.js"],"names":["AppContext","createContext","useAppContext","useContext","AuthenticatedRoute","children","rest","useLocation","pathname","search","isAuthenticated","to","UnauthenticatedRoute","redirect","name","url","window","location","href","replace","regex","RegExp","results","exec","decodeURIComponent","querystring","logError","error","errorInfo","Sentry","scope","setExtras","onError","message","toString","Error","config","alert","Home","useState","notes","setNotes","isLoading","setIsLoading","loadNotes","API","get","useEffect","a","onLoad","className","PageHeader","ListGroup","concat","map","note","i","key","noteId","ListGroupItem","header","content","trim","split","Date","createdAt","toLocaleString","renderNotesList","LoaderButton","disabled","props","Button","Glyphicon","glyph","useFormFields","initialState","fields","setValues","event","target","id","value","Login","userHasAuthenticated","email","password","handleFieldChange","preventDefault","Auth","signIn","onSubmit","FormGroup","controlId","bsSize","ControlLabel","FormControl","autoFocus","type","onChange","block","length","NotFound","Signup","confirmPassword","confirmationCode","history","useHistory","newUser","setNewUser","handleSubmit","signUp","username","handleConfirmationSubmit","confirmSignUp","push","HelpBlock","s3Upload","file","filename","now","Storage","vault","put","contentType","stored","STRIPE_KEY","s3","REGION","BUCKET","apiGateway","URL","cognito","USER_POOL_ID","APP_CLIENT_ID","IDENTITY_POOL_ID","MAX_ATTACHMENT_SIZE","NewNote","useRef","setContent","current","size","attachment","createNote","post","body","componentClass","e","files","bsStyle","Notes","useParams","setNote","isDeleting","setIsDeleting","saveNote","deleteNote","del","confirm","loadNote","attachmentURL","Static","rel","onClick","injectStripe","storage","isProcessing","setIsProcessing","isCardComplete","setIsCardComplete","stripe","createToken","token","min","placeholder","complete","style","base","fontSize","fontFamily","Settings","setStripe","billUser","details","source","Stripe","Routes","exact","path","ErrorBoundary","state","hasError","this","React","Component","App","isAuthenticating","setIsAuthenticating","currentSession","signOut","Navbar","fluid","collapseOnSelect","Header","Brand","Toggle","Collapse","Nav","pullRight","NavItem","Provider","Boolean","hostname","match","dsn","Amplify","configure","mandatorySignIn","region","userPoolId","identityPoolId","userPoolWebClientId","bucket","endpoints","endpoint","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.85a9fa8a.chunk.js","sourcesContent":["import { useContext, createContext } from \"react\";\n\nexport const AppContext = createContext(null);\n\nexport function useAppContext() {\n  return useContext(AppContext);\n}","import React from \"react\";\nimport { Route, Redirect, useLocation } from \"react-router-dom\";\nimport { useAppContext } from \"../libs/contextLib\";\n\nexport default function AuthenticatedRoute({ children, ...rest }) {\n  const { pathname, search } = useLocation();\n  const { isAuthenticated } = useAppContext();\n  return (\n    <Route {...rest}>\n      {isAuthenticated ? (\n        children\n      ) : (\n        <Redirect to={\n          `/login?redirect=${pathname}${search}`\n        } />\n      )}\n    </Route>\n  );\n}","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { useAppContext } from \"../libs/contextLib\";\n\nfunction querystring(name, url = window.location.href) {\n    name = name.replace(/[[]]/g, \"\\\\$&\");\n  \n    const regex = new RegExp(\"[?&]\" + name + \"(=([^&#]*)|&|#|$)\", \"i\");\n    const results = regex.exec(url);\n  \n    if (!results) {\n      return null;\n    }\n    if (!results[2]) {\n      return \"\";\n    }\n  \n    return decodeURIComponent(results[2].replace(/\\+/g, \" \"));\n  }\n\n  export default function UnauthenticatedRoute({ children, ...rest }) {\n    const { isAuthenticated } = useAppContext();\n    const redirect = querystring(\"redirect\");\n    return (\n      <Route {...rest}>\n        {!isAuthenticated ? (\n          children\n        ) : (\n          <Redirect to={redirect === \"\" || redirect === null ? \"/\" : redirect} />\n        )}\n      </Route>\n    );\n  }","import * as Sentry from \"@sentry/browser\";\n\nconst isLocal = process.env.NODE_ENV === \"development\";\n\nexport function initSentry() {\n  if (isLocal) {\n    return;\n  }\n\n  Sentry.init({\n    dsn: \"https://1834d4da365947e1a5f06b5016e36a06@o453115.ingest.sentry.io/5441555\",\n  });\n}\n\nexport function logError(error, errorInfo = null) {\n  if (isLocal) {\n    return;\n  }\n\n  Sentry.withScope((scope) => {\n    errorInfo && scope.setExtras(errorInfo);\n    Sentry.captureException(error);\n  });\n}\n\nexport function onError(error) {\n  let errorInfo = {};\n  let message = error.toString();\n\n  // Auth errors\n  if (!(error instanceof Error) && error.message) {\n    errorInfo = error;\n    message = error.message;\n    error = new Error(message);\n    // API errors\n  } else if (error.config && error.config.url) {\n    errorInfo.url = error.config.url;\n  }\n\n  logError(error, errorInfo);\n\n  alert(message);\n}","import React, { useState, useEffect } from \"react\";\nimport { PageHeader, ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { onError } from \"../libs/errorLib\";\nimport { API } from \"aws-amplify\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport \"./Home.css\";\n\n\nexport default function Home() {\n  const [notes, setNotes] = useState([]);\n  const { isAuthenticated } = useAppContext();\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    async function onLoad() {\n      if (!isAuthenticated) {\n        return;\n      }\n  \n      try {\n        const notes = await loadNotes();\n        setNotes(notes);\n      } catch (e) {\n        onError(e);\n      }\n  \n      setIsLoading(false);\n    }\n  \n    onLoad();\n  }, [isAuthenticated]);\n  \n  function loadNotes() {\n    return API.get(\"notes\", \"/notes\");\n  }\n\n  function renderNotesList(notes) {\n    return [{}].concat(notes).map((note, i) =>\n      i !== 0 ? (\n        <LinkContainer key={note.noteId} to={`/notes/${note.noteId}`}>\n          <ListGroupItem header={note.content.trim().split(\"\\n\")[0]}>\n            {\"Created: \" + new Date(note.createdAt).toLocaleString()}\n          </ListGroupItem>\n        </LinkContainer>\n      ) : (\n        <LinkContainer key=\"new\" to=\"/notes/new\">\n          <ListGroupItem>\n            <h4>\n              <b>{\"\\uFF0B\"}</b> Create a new note\n            </h4>\n          </ListGroupItem>\n        </LinkContainer>\n      )\n    );\n  }\n\n  function renderLander() {\n    return (\n      <div className=\"lander\">\n        <h1>EZNotes</h1>\n        <p>A simple note taking app</p>\n        <div>\n          <Link to=\"/login\" className=\"btn btn-info btn-lg\">\n            Login\n          </Link>\n          <Link to=\"/signup\" className=\"btn btn-success btn-lg\">\n            Signup\n          </Link>\n        </div>\n      </div>\n    );\n  }\n\n  function renderNotes() {\n    return (\n      <div className=\"notes\">\n        <PageHeader>Your Home Page</PageHeader>\n        <ListGroup>\n          {!isLoading && renderNotesList(notes)}\n        </ListGroup>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Home\">\n      {isAuthenticated ? renderNotes() : renderLander()}\n    </div>\n  );\n}","import React from \"react\";\nimport { Button, Glyphicon } from \"react-bootstrap\";\nimport \"./LoaderButton.css\";\n\nexport default function LoaderButton({\n  isLoading,\n  className = \"\",\n  disabled = false,\n  ...props\n}) {\n  return (\n    <Button\n      className={`LoaderButton ${className}`}\n      disabled={disabled || isLoading}\n      {...props}\n    >\n      {isLoading && <Glyphicon glyph=\"refresh\" className=\"spinning\" />}\n      {props.children}\n    </Button>\n  );\n}","import { useState } from \"react\";\n\nexport function useFormFields(initialState) {\n  const [fields, setValues] = useState(initialState);\n\n  return [\n    fields,\n    function(event) {\n      setValues({\n        ...fields,\n        [event.target.id]: event.target.value\n      });\n    }\n  ];\n}","import React, { useState } from \"react\";\nimport { Auth } from \"aws-amplify\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport { onError } from \"../libs/errorLib\";\nimport \"./Login.css\";\n\nexport default function Login() {\n  const { userHasAuthenticated } = useAppContext();\n  const [isLoading, setIsLoading] = useState(false);\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\"\n  });\n\n  function validateForm() {\n    return fields.email.length > 0 && fields.password.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n\n    setIsLoading(true);\n\n    try {\n      await Auth.signIn(fields.email, fields.password);\n      userHasAuthenticated(true);\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <div className=\"Login\">\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"email\" bsSize=\"large\">\n          <ControlLabel>Email</ControlLabel>\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={fields.email}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n          <ControlLabel>Password</ControlLabel>\n          <FormControl\n            type=\"password\"\n            value={fields.password}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Login\n        </LoaderButton>\n      </form>\n    </div>\n  );\n}","import React from \"react\";\nimport \"./NotFound.css\";\n\nexport default function NotFound() {\n  return (\n    <div className=\"NotFound\">\n      <h3>Sorry, page not found!</h3>\n    </div>\n  );\n}","import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n  HelpBlock,\n  FormGroup,\n  FormControl,\n  ControlLabel\n} from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { useAppContext } from \"../libs/contextLib\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport { onError } from \"../libs/errorLib\";\nimport { Auth } from \"aws-amplify\";\nimport \"./Signup.css\";\n\nexport default function Signup() {\n  const [fields, handleFieldChange] = useFormFields({\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\",\n    confirmationCode: \"\",\n  });\n  const history = useHistory();\n  const [newUser, setNewUser] = useState(null);\n  const { userHasAuthenticated } = useAppContext();\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return (\n      fields.email.length > 0 &&\n      fields.password.length > 0 &&\n      fields.password === fields.confirmPassword\n    );\n  }\n\n  function validateConfirmationForm() {\n    return fields.confirmationCode.length > 0;\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n  \n    setIsLoading(true);\n  \n    try {\n      const newUser = await Auth.signUp({\n        username: fields.email,\n        password: fields.password,\n      });\n      setIsLoading(false);\n      setNewUser(newUser);\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n  \n  async function handleConfirmationSubmit(event) {\n    event.preventDefault();\n  \n    setIsLoading(true);\n  \n    try {\n      await Auth.confirmSignUp(fields.email, fields.confirmationCode);\n      await Auth.signIn(fields.email, fields.password);\n  \n      userHasAuthenticated(true);\n      history.push(\"/\");\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n\n  function renderConfirmationForm() {\n    return (\n      <form onSubmit={handleConfirmationSubmit}>\n        <FormGroup controlId=\"confirmationCode\" bsSize=\"large\">\n          <ControlLabel>Confirmation Code</ControlLabel>\n          <FormControl\n            autoFocus\n            type=\"tel\"\n            onChange={handleFieldChange}\n            value={fields.confirmationCode}\n          />\n          <HelpBlock>Please check your email for the code.</HelpBlock>\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          isLoading={isLoading}\n          disabled={!validateConfirmationForm()}\n        >\n          Verify\n        </LoaderButton>\n      </form>\n    );\n  }\n\n  function renderForm() {\n    return (\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"email\" bsSize=\"large\">\n          <ControlLabel>Email</ControlLabel>\n          <FormControl\n            autoFocus\n            type=\"email\"\n            value={fields.email}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"password\" bsSize=\"large\">\n          <ControlLabel>Password</ControlLabel>\n          <FormControl\n            type=\"password\"\n            value={fields.password}\n            onChange={handleFieldChange}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"confirmPassword\" bsSize=\"large\">\n          <ControlLabel>Confirm Password</ControlLabel>\n          <FormControl\n            type=\"password\"\n            onChange={handleFieldChange}\n            value={fields.confirmPassword}\n          />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Signup\n        </LoaderButton>\n      </form>\n    );\n  }\n\n  return (\n    <div className=\"Signup\">\n      {newUser === null ? renderForm() : renderConfirmationForm()}\n    </div>\n  );\n}","import { Storage } from \"aws-amplify\";\n\nexport async function s3Upload(file) {\n  const filename = `${Date.now()}-${file.name}`;\n\n  const stored = await Storage.vault.put(filename, file, {\n    contentType: file.type,\n  });\n\n  return stored.key;\n}","const dev = {\n    STRIPE_KEY: \"pk_test_51HUFv3CGpYEOEA0LOE6XetRow7eeIDw4NtjACdZLNfO3u4bfU8PVmgRPLFxgjvWQijX3hBMLbhCoanjVGXSYRnkk00drgO4jjF\",\n    s3: {\n      REGION: \"us-east-2\",\n      BUCKET: \"notes-app-2-api-dev-attachmentsbucket-116bvlto2zr4q\"\n    },\n    apiGateway: {\n      REGION: \"us-east-2\",\n      URL: \"https://kaqdinu6d7.execute-api.us-east-2.amazonaws.com/dev\"\n    },\n    cognito: {\n      REGION: \"us-east-2\",\n      USER_POOL_ID: \"us-east-2_sdWx409PR\",\n      APP_CLIENT_ID: \"2998tfeqlck2vco3t02spgnles\",\n      IDENTITY_POOL_ID: \"us-east-2:97b77504-9aff-41b8-bda8-01f701776135\"\n    }\n  };\n  \n  const prod = {\n    STRIPE_KEY: \"pk_test_51HUFv3CGpYEOEA0LOE6XetRow7eeIDw4NtjACdZLNfO3u4bfU8PVmgRPLFxgjvWQijX3hBMLbhCoanjVGXSYRnkk00drgO4jjF\",\n    s3: {\n      REGION: \"us-east-2\",\n      BUCKET: \"notes-app-2-api-prod-attachmentsbucket-1r5p3bfme8mi6\"\n    },\n    apiGateway: {\n      REGION: \"us-east-2\",\n      URL: \"https://mi9fnv7r42.execute-api.us-east-2.amazonaws.com/prod\"\n    },\n    cognito: {\n      REGION: \"us-east-2\",\n      USER_POOL_ID: \"us-east-2_iI0JGNXqM\",\n      APP_CLIENT_ID: \"46ehmkhc5re6ilr9ogkpq16c7q\",\n      IDENTITY_POOL_ID: \"us-east-2:05f1f030-6c4e-4546-9c1d-dbfadb53a86e\"\n    }\n  };\n  \n  // Default to dev if not set\n  const config = process.env.REACT_APP_STAGE === 'prod'\n    ? prod\n    : dev;\n  \n  export default {\n    // Add common config values here\n    MAX_ATTACHMENT_SIZE: 5000000,\n    ...config\n  };","import React, { useRef, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport { onError } from \"../libs/errorLib\";\nimport { s3Upload } from \"../libs/awsLib\";\nimport config from \"../config\";\nimport { API } from \"aws-amplify\";\nimport \"./NewNote.css\";\n\nexport default function NewNote() {\n  const file = useRef(null);\n  const history = useHistory();\n  const [content, setContent] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n\n  function validateForm() {\n    return content.length > 0;\n  }\n\n  function handleFileChange(event) {\n    file.current = event.target.files[0];\n  }\n\n  async function handleSubmit(event) {\n    event.preventDefault();\n  \n    if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n      alert(\n        `Please pick a file smaller than ${\n          config.MAX_ATTACHMENT_SIZE / 1000000\n        } MB.`\n      );\n      return;\n    }\n  \n    setIsLoading(true);\n  \n    try {\n      const attachment = file.current ? await s3Upload(file.current) : null;\n  \n      await createNote({ content, attachment });\n      history.push(\"/\");\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n  \n  \n  function createNote(note) {\n    return API.post(\"notes\", \"/notes\", {\n      body: note\n    });\n  }\n\n  return (\n    <div className=\"NewNote\">\n      <form onSubmit={handleSubmit}>\n        <FormGroup controlId=\"content\">\n          <FormControl\n            value={content}\n            componentClass=\"textarea\"\n            onChange={e => setContent(e.target.value)}\n          />\n        </FormGroup>\n        <FormGroup controlId=\"file\">\n          <ControlLabel>Attachment</ControlLabel>\n          <FormControl onChange={handleFileChange} type=\"file\" />\n        </FormGroup>\n        <LoaderButton\n          block\n          type=\"submit\"\n          bsSize=\"large\"\n          bsStyle=\"primary\"\n          isLoading={isLoading}\n          disabled={!validateForm()}\n        >\n          Create\n        </LoaderButton>\n      </form>\n    </div>\n  );\n}","import React, { useRef, useState, useEffect } from \"react\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { API, Storage } from \"aws-amplify\";\nimport { onError } from \"../libs/errorLib\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport LoaderButton from \"../components/LoaderButton\";\nimport config from \"../config\";\nimport { s3Upload } from \"../libs/awsLib\";\nimport \"./Notes.css\";\n\nexport default function Notes() {\n    const file = useRef(null);\n    const { id } = useParams();\n    const history = useHistory();\n    const [note, setNote] = useState(null);\n    const [content, setContent] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n    const [isDeleting, setIsDeleting] = useState(false);\n\n  useEffect(() => {\n    function loadNote() {\n      return API.get(\"notes\", `/notes/${id}`);\n    }\n\n    async function onLoad() {\n      try {\n        const note = await loadNote();\n        const { content, attachment } = note;\n\n        if (attachment) {\n          note.attachmentURL = await Storage.vault.get(attachment);\n        }\n\n        setContent(content);\n        setNote(note);\n      } catch (e) {\n        onError(e);\n      }\n    }\n\n    onLoad();\n  }, [id]);\n\n\n    function validateForm() {\n        return content.length > 0;\n      }\n      \n    function formatFilename(str) {\n        return str.replace(/^\\w+-/, \"\");\n       }\n      \n    function handleFileChange(event) {\n        file.current = event.target.files[0];\n      }\n      \n      function saveNote(note) {\n        return API.put(\"notes\", `/notes/${id}`, {\n          body: note\n        });\n      }\n      \n      async function handleSubmit(event) {\n        let attachment;\n      \n        event.preventDefault();\n      \n        if (file.current && file.current.size > config.MAX_ATTACHMENT_SIZE) {\n          alert(\n            `Please pick a file smaller than ${\n              config.MAX_ATTACHMENT_SIZE / 1000000\n            } MB.`\n          );\n          return;\n        }\n      \n        setIsLoading(true);\n      \n        try {\n          if (file.current) {\n            attachment = await s3Upload(file.current);\n          }\n      \n          await saveNote({\n            content,\n            attachment: attachment || note.attachment\n          });\n          history.push(\"/\");\n        } catch (e) {\n          onError(e);\n          setIsLoading(false);\n        }\n      }\n      \n      function deleteNote() {\n        return API.del(\"notes\", `/notes/${id}`);\n      }\n      \n      async function handleDelete(event) {\n        event.preventDefault();\n      \n        const confirmed = window.confirm(\n          \"Are you sure you want to delete this note?\"\n        );\n      \n        if (!confirmed) {\n          return;\n        }\n      \n        setIsDeleting(true);\n      \n        try {\n          await deleteNote();\n          history.push(\"/\");\n        } catch (e) {\n          onError(e);\n          setIsDeleting(false);\n        }\n      }\n      \n      return (\n        <div className=\"Notes\">\n          {note && (\n            <form onSubmit={handleSubmit}>\n              <FormGroup controlId=\"content\">\n                <FormControl\n                  value={content}\n                  componentClass=\"textarea\"\n                  onChange={e => setContent(e.target.value)}\n                />\n              </FormGroup>\n              {note.attachment && (\n                <FormGroup>\n                  <ControlLabel>Attachment</ControlLabel>\n                  <FormControl.Static>\n                    <a\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                      href={note.attachmentURL}\n                    >\n                      {formatFilename(note.attachment)}\n                    </a>\n                  </FormControl.Static>\n                </FormGroup>\n              )}\n              <FormGroup controlId=\"file\">\n                {!note.attachment && <ControlLabel>Attachment</ControlLabel>}\n                <FormControl onChange={handleFileChange} type=\"file\" />\n              </FormGroup>\n              <LoaderButton\n                block\n                type=\"submit\"\n                bsSize=\"large\"\n                bsStyle=\"primary\"\n                isLoading={isLoading}\n                disabled={!validateForm()}\n              >\n                Save\n              </LoaderButton>\n              <LoaderButton\n                block\n                bsSize=\"large\"\n                bsStyle=\"danger\"\n                onClick={handleDelete}\n                isLoading={isDeleting}\n              >\n                Delete\n              </LoaderButton>\n            </form>\n          )}\n        </div>\n      );\n}","import React, { useState } from \"react\";\nimport { FormGroup, FormControl, ControlLabel } from \"react-bootstrap\";\nimport { CardElement, injectStripe } from \"react-stripe-elements\";\nimport LoaderButton from \"./LoaderButton\";\nimport { useFormFields } from \"../libs/hooksLib\";\nimport \"./BillingForm.css\";\n\nfunction BillingForm({ isLoading, onSubmit, ...props }) {\n  const [fields, handleFieldChange] = useFormFields({\n    name: \"\",\n    storage: \"\"\n  });\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [isCardComplete, setIsCardComplete] = useState(false);\n\n  isLoading = isProcessing || isLoading;\n\n  function validateForm() {\n    return (\n      fields.name !== \"\" &&\n      fields.storage !== \"\" &&\n      isCardComplete\n    );\n  }\n\n  async function handleSubmitClick(event) {\n    event.preventDefault();\n\n    setIsProcessing(true);\n\n    const { token, error } = await props.stripe.createToken({ name: fields.name });\n\n    setIsProcessing(false);\n\n    onSubmit(fields.storage, { token, error });\n  }\n\n  return (\n    <form className=\"BillingForm\" onSubmit={handleSubmitClick}>\n      <FormGroup bsSize=\"large\" controlId=\"storage\">\n        <ControlLabel>Storage</ControlLabel>\n        <FormControl\n          min=\"0\"\n          type=\"number\"\n          value={fields.storage}\n          onChange={handleFieldChange}\n          placeholder=\"Number of notes to store\"\n        />\n      </FormGroup>\n      <hr />\n      <FormGroup bsSize=\"large\" controlId=\"name\">\n        <ControlLabel>Cardholder&apos;s name</ControlLabel>\n        <FormControl\n          type=\"text\"\n          value={fields.name}\n          onChange={handleFieldChange}\n          placeholder=\"Name on the card\"\n        />\n      </FormGroup>\n      <ControlLabel>Credit Card Info</ControlLabel>\n      <CardElement\n        className=\"card-field\"\n        onChange={e => setIsCardComplete(e.complete)}\n        style={{\n          base: { fontSize: \"18px\", fontFamily: '\"Open Sans\", sans-serif' }\n        }}\n      />\n      <LoaderButton\n        block\n        type=\"submit\"\n        bsSize=\"large\"\n        isLoading={isLoading}\n        disabled={!validateForm()}\n      >\n        Purchase\n      </LoaderButton>\n    </form>\n  );\n}\n\nexport default injectStripe(BillingForm);","import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { API } from \"aws-amplify\";\nimport { onError } from \"../libs/errorLib\";\nimport config from \"../config\";\nimport { Elements, StripeProvider } from \"react-stripe-elements\";\nimport BillingForm from \"../components/BillingForm\";\nimport \"./Settings.css\";\n\nexport default function Settings() {\n  const history = useHistory();\n  const [isLoading, setIsLoading] = useState(false);\n  const [stripe, setStripe] = useState(null);\n\nuseEffect(() => {\n  setStripe(window.Stripe(config.STRIPE_KEY));\n}, []);\n\n  function billUser(details) {\n    return API.post(\"notes\", \"/billing\", {\n      body: details\n    });\n  }\n\n  async function handleFormSubmit(storage, { token, error }) {\n    if (error) {\n      onError(error);\n      return;\n    }\n  \n    setIsLoading(true);\n  \n    try {\n      await billUser({\n        storage,\n        source: token.id\n      });\n  \n      alert(\"Your card has been charged successfully!\");\n      history.push(\"/\");\n    } catch (e) {\n      onError(e);\n      setIsLoading(false);\n    }\n  }\n  \n  return (\n    <div className=\"Settings\">\n      <StripeProvider stripe={stripe}>\n        <Elements>\n          <BillingForm isLoading={isLoading} onSubmit={handleFormSubmit} />\n        </Elements>\n      </StripeProvider>\n    </div>\n  );\n}","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport AuthenticatedRoute from \"./components/AuthenticatedRoute\";\nimport UnauthenticatedRoute from \"./components/UnauthenticatedRoute\";\nimport Home from \"./containers/Home\";\nimport Login from \"./containers/Login\";\nimport NotFound from \"./containers/NotFound\";\nimport Signup from \"./containers/Signup\";\nimport NewNote from \"./containers/NewNote\";\nimport Notes from \"./containers/Notes\";\nimport Settings from \"./containers/Settings\";\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <UnauthenticatedRoute exact path=\"/login\">\n        <Login />\n    </UnauthenticatedRoute>\n    <UnauthenticatedRoute exact path=\"/signup\">\n    <   Signup />\n    </UnauthenticatedRoute>\n    <AuthenticatedRoute exact path=\"/settings\">\n        <Settings />\n    </AuthenticatedRoute>\n    <AuthenticatedRoute exact path=\"/notes/new\">\n        <NewNote />\n    </AuthenticatedRoute>\n    <AuthenticatedRoute exact path=\"/notes/:id\">\n        <Notes />\n    </AuthenticatedRoute>\n        {/* Finally, catch all unmatched routes */}\n        <Route>\n            <NotFound />\n        </Route>\n    </Switch>\n  );\n}","import React from \"react\";\nimport { logError } from \"../libs/errorLib\";\nimport \"./ErrorBoundary.css\";\n\nexport default class ErrorBoundary extends React.Component {\n  state = { hasError: false };\n\n  static getDerivedStateFromError(error) {\n    return { hasError: true };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    logError(error, errorInfo);\n  }\n\n  render() {\n    return this.state.hasError ? (\n      <div className=\"ErrorBoundary\">\n        <h3>Sorry there was a problem loading this page</h3>\n      </div>\n    ) : (\n      this.props.children\n    );\n  }\n}","import React, { useState, useEffect } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport Routes from \"./Routes\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { AppContext } from \"./libs/contextLib\";\nimport { Auth } from \"aws-amplify\";\nimport { onError } from \"./libs/errorLib\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\nimport \"./App.css\";\n\nfunction App() {\n\n  const [isAuthenticating, setIsAuthenticating] = useState(true);\n  const [isAuthenticated, userHasAuthenticated] = useState(false);\n  const history = useHistory();\n  \n  useEffect(() => {\n    onLoad();\n  }, []);\n  \n  async function onLoad() {\n    try {\n      await Auth.currentSession();\n      userHasAuthenticated(true);\n    }\n    catch(e) {\n      if (e !== 'No current user') {\n        onError(e);\n      }\n    }\n  \n    setIsAuthenticating(false);\n  }\n\n  async function handleLogout() {\n    await Auth.signOut();\n  \n    userHasAuthenticated(false);\n\n    history.push(\"/login\");\n  }\n\n  return (\n    !isAuthenticating && (\n      <div className=\"App container\">\n        <Navbar fluid collapseOnSelect>\n          <Navbar.Header>\n            <Navbar.Brand>\n              <Link to=\"/\">Home</Link>\n            </Navbar.Brand>\n            <Navbar.Toggle />\n          </Navbar.Header>\n          <Navbar.Collapse>\n            <Nav pullRight>\n              {isAuthenticated ? (\n                <>\n                  <LinkContainer to=\"/settings\">\n                    <NavItem>Settings</NavItem>\n                  </LinkContainer>\n                  <NavItem onClick={handleLogout}>Logout</NavItem>\n                </>\n              ) : (\n                <>\n                  <LinkContainer to=\"/signup\">\n                    <NavItem>Signup</NavItem>\n                  </LinkContainer>\n                  <LinkContainer to=\"/login\">\n                    <NavItem>Login</NavItem>\n                  </LinkContainer>\n                </>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Navbar>\n        <ErrorBoundary>\n          <AppContext.Provider value={{ isAuthenticated, userHasAuthenticated }}>\n            <Routes />\n          </AppContext.Provider>\n        </ErrorBoundary>\n      </div>\n    )\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Amplify } from 'aws-amplify';\nimport config from './config';\nimport { initSentry } from './libs/errorLib';\n\ninitSentry();\n\n\nAmplify.configure({\n  Auth: {\n    mandatorySignIn: true,\n    region: config.cognito.REGION,\n    userPoolId: config.cognito.USER_POOL_ID,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID,\n    userPoolWebClientId: config.cognito.APP_CLIENT_ID\n  },\n  Storage: {\n    region: config.s3.REGION,\n    bucket: config.s3.BUCKET,\n    identityPoolId: config.cognito.IDENTITY_POOL_ID\n  },\n  API: {\n    endpoints: [\n      {\n        name: \"notes\",\n        endpoint: config.apiGateway.URL,\n        region: config.apiGateway.REGION\n      },\n    ]\n  }\n});\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}